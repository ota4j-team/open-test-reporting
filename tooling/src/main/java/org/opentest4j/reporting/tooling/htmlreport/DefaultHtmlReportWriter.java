package org.opentest4j.reporting.tooling.htmlreport;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.dataformat.xml.XmlMapper;
import com.google.json.JsonSanitizer;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;

import static java.util.Objects.requireNonNull;

public class DefaultHtmlReportWriter implements HtmlReportWriter {

    @Override
    public void writeHtmlReport(Path xmlFile, Path htmlFile) throws IOException {

        // TODO Check whether XML file is in hierarchical format. If not, convert it first

        var node = new XmlMapper().readTree(xmlFile.toFile());
        var jsonMapper = new ObjectMapper();
        var nodeFactory = jsonMapper.getNodeFactory();
        var rootNode = nodeFactory.objectNode();
        rootNode.set("testCount", nodeFactory.numberNode(node.findValues("start").size()));
        var json = JsonSanitizer.sanitize(jsonMapper.writeValueAsString(rootNode));
        var javaScript = "globalThis.data = " + json + ";";

        var content = readTemplate().replace("<script src=\"./init.js\"></script>", "<script>" + javaScript + "</script>");
        Files.writeString(htmlFile, content);
    }

    private String readTemplate() throws IOException {
        String content;
        try (var template = getClass().getResourceAsStream("template.html")) {
            content = new String(requireNonNull(template).readAllBytes());
        }
        return content;
    }
}
